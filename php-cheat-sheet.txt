JAVASCRIPT COPY TEXT TO CLIPBOARD IN AN INPUT FIELD RESEARCH

  var inp = document.getElementById('txtUsername');
  if (inp && inp.select)
  {
    inp.select(); // select all text
    try {
      document.execCommand('copy');
      inp.blur(); // unfocus
    }
    catch(err){}
  }


JAVASCRIPT TIMEOUT QUICKIE

  setTimeout(function() { alert('I am 1 minute in the future!'; }, 60 * 60);

JAVASCRIPT HTML5 DOM ACCESS ANY INPUT FIELD WITHIN ANY FORM WITHIN YOUR HTML5 DOCUMENT RESEARCH
  
  document.form.txtAddress.value = '';

PHP USE WARNINGS;
  
  // I'm 70% sure this is always enabled
  error_reporting(E_ALL);
  ini_set('display_errors', 1);

VIEW HTML FILES GENERATED FROM PHP PAGES QUICKLY AS POSSIBLE HOWEVER I THINK LYNX IS THE ONLY ONE...................

  lynx -force_html <(php some-test-php.php)

PROPER PHP EOL (INSTEAD OF JUST \n, WHICH WORKS 0 WELL IF YOU WANT DOS-NEWLINES FOR NOTEPAD.EXE ON WINDOWS 10 HEHE)
  AND PREG_REPLACE LIKE WITH PERL YOU CAN USE COOL REGEX SYMBOLS TO REPRESENT REGEX EXPRESSION BOUNDARIES
  AND CONVERT A UNICODE UTF-16 CODE-NAME U+2015 INTO A ACTUAL GOOD HTMLENTITIES VALID HTML-CHARACTER-OUTPUT/HTML-ENTITY EXPRESSION (ie. &#x2015;)

  <?php
    $s = 'hello\u2015bye';
    $s = preg_replace("/\\\u([0-9a-z]{3,4})/", "&#x$1;", $s);
    $s = preg_replace("@\\\u([0-9a-z]{3,4})@", "&#x$1;", $s); #Same thing as the first one
    echo $s, PHP_EOL;
  ?>




WHEN TO USE EM-DASH (longer) VERSUS EN-DASH (shorter) HTML-ENTITIES IN YOUR HTML CODE

  <pre>
  &ndash;   Separate phone number numbers (90% sure regular '-' would work here), extrapolating list of something major (eg. Linux programming&ndash; Bash, Perl 5, Python3.)
  &mdash;   ${date_whatever}&mdash;\s?Present/${date_whatever+whatever}
  </pre>

ALL OF THESE HTML ENTITIES ARE THE SAME THING

  &#8213; &#x2015; &horbar; (horizontal bar UTF-16 character 3.1x longer than '-')

HYPHEN REFERENCE

  <div style="white-space:pre-line">
  regular dash: -
  (a little longer)
  en dash: &ndash; (1.3x longer than regular dash)
  (much longer)
  em dash: &mdash; (2.1x longer than en-dash. 3.1x longer than regular dash)
  (a little longer)
  horizontal bar: &horbar; (7% longer than em-dash)
  regular hyphen: --
  </div>


SOME GOOD HTML ENTITIES RESEARCH

  &aelig; <!-- ae in one character -->
  &AElig; <!-- AE in one character -->
  &horbar;
  &middot; &bull; <!-- bull is for bullet, which is a x2 thicker middot -->
  &uarr; &darr; &larr; &rarr;

JAVASCRIPT INSTANTIATE MORE THAN ONE VARIABLE IN ONE STATEMENT

  var a=1, b=2, c=a+2;
  var d=document,a='setAttribute',s=d.createElement('script');

JAVASCRIPT DIFFERENCE BETWEEN undefined AND null

  'undefined' is longer
  undefined !== null
  undefined == null
  that's it.

JAVASCRIPT: A FUNCTION IN AN HREF LINK AND CALL IT

  <a href="javascript:void(function(){alert('sup');})();">say sup</a>

DYNAMICALLY LOAD IN A .JS INTO YOUR "DOM"

  var d=document;
  var tmp='setAttribute';
  var tag=d.createElement('script');
  tag[tmp]('type','text/javascript');
  tag[tmp]('src','/effect.js');
  tmp = undefined;
  d.head.appendChild(tag);
  tag = undefined;

HTML ENTITIES NOTES-RESEARCH

  &#34; to &#9000;
  space is &#160;

JAVASCRIPT USE STRICT LIKE PERL

  'use strict';
  n = 1;        //autodie
  var n2 = 2;   //better

WEB BROWSERS RESEARCH

  #SUPER re-inserts passwords into your inputs as-needed:
  google-chrome

  #alts to chrome
  chromium

  #a little bit of a step down:
  epiphany

  #Super basic GUI-based non-JavaScript web browsers:
  dillo
  netsurf

  #TTY/virtual-console/terminal non-JavaScript non-Image-viewing web browsers:
  lynx
  links2
  links


OPEN A LIST OF URLs INSTANTLY IN EPIPHANY-BROWSER/EPIPHANY/EPIPHANY(THE-GUI-WEB-BROWSER-THAT-HAS-JAVASCRIPT)

  url_list=(
http://google.com
http://yahoo.com
  )
  for u in "${url_list[@]}"; do
    epiphany "$1" &
  done

CURL VS WGET SUPER EQUIVALENCY EXAMPLES

  #the wget is +30% (more) verbose
  wget --output-document=- http://localhost:8080/wget-curl-me.php | grep Hello
  curl --output - http://localhost:8080/wget-curl-me.php | grep Hello

  wget --quiet  --output-document=- http://localhost:8080/wget-curl-me.php | grep Hello
  curl --silent --output - http://localhost:8080/wget-curl-me.php | grep Hello

  wget --quiet  --output-document=- http://localhost:8080/DNE.php | grep Hello
  echo $? #1
  curl --silent --output - http://localhost:8080/DNE.php | grep Hello
  echo $? #1
